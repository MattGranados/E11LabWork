# -*- coding: utf-8 -*-
"""[E11] Lab Week 6 Activities

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lSNuo2tbw2vTDdqZQpknYJxKmwmLRTfA
"""

# Commented out IPython magic to ensure Python compatibility.
import math
import numpy as np
import pandas as pd
# This line allows plots to show in the Jupyter notebook
# %matplotlib inline
import matplotlib.pyplot as plt
import io
import requests
from scipy.stats import norm
from IPython import display

InsideData = pd.read_csv('InsideDataFinal.csv')
OutsideData = pd.read_csv('OutsideDataFinal.csv')

InsideData

plt.plot(InsideData['Temperature'])
plt.ylabel('Temperature (Celsius)') 
plt.xlabel('Time')                    
plt.title("Temperature vs Time")                                 
plt.show()

plt.plot(InsideData['Pressure'])
plt.ylabel('Pressure') 
plt.xlabel('Time')                    
plt.title("Pressure vs Time")                                 
plt.show()

plt.plot(InsideData['Humidity'])
plt.ylabel('Humidity') 
plt.xlabel('Time')                    
plt.title("Humidity vs Time")                                 
plt.show()

meanInTemp = np.mean(InsideData['Temperature'])
sigmaInTemp = np.std(InsideData['Temperature'])
meanInPress = np.mean(InsideData['Pressure'])
sigmaInPress = np.std(InsideData['Pressure'])
meanInHum = np.mean(InsideData['Humidity'])
sigmaInHum = np.std(InsideData['Humidity'])
xInTemp = np.linspace(meanInTemp - 5*sigmaInTemp,meanInTemp + 5*sigmaInTemp,100)
yInTemp = norm.pdf(xInTemp, meanInTemp, sigmaInTemp)
xInPress = np.linspace(meanInPress - 5*sigmaInPress ,meanInPress + 5*sigmaInPress,100)
yInPress = norm.pdf(xInPress, meanInPress, sigmaInPress)
xInHum = np.linspace(meanInHum - 5*sigmaInHum,meanInHum + 5*sigmaInHum,100)
yInHum = norm.pdf(xInHum, meanInHum, sigmaInHum)

plt.ion()
fig1 = plt.figure(1, figsize=(10,5))
ax1 = fig1.add_subplot()
fig1.canvas.draw()
ax1.clear()
plt.hist(InsideData["Temperature"], density = True, bins = 9)
ax1.plot(xInTemp, yInTemp)
ax1.set_ylabel("Frequency")
ax1.set_xlabel("Temperature")
fig1.canvas.draw()
display.display(plt.gcf())
display.clear_output(wait=True)

plt.ion()
fig1 = plt.figure(1, figsize=(10,5))
ax1 = fig1.add_subplot()
fig1.canvas.draw()
ax1.clear()
plt.hist(InsideData["Pressure"], density = True)
ax1.plot(xInPress, yInPress)
ax1.set_ylabel("Frequency")
ax1.set_xlabel("Pressure")
fig1.canvas.draw()
display.display(plt.gcf())
display.clear_output(wait=True)

plt.ion()
fig1 = plt.figure(1, figsize=(10,5))
ax1 = fig1.add_subplot()
fig1.canvas.draw()
ax1.clear()
plt.hist(InsideData["Humidity"], density = True)
ax1.plot(xInHum, yInHum)
ax1.set_ylabel("Frequency")
ax1.set_xlabel("Humidity")
fig1.canvas.draw()
display.display(plt.gcf())
display.clear_output(wait=True)

plt.plot(OutsideData['Temperature'])
plt.ylabel('Temperature (Celsius)') 
plt.xlabel('Time')                    
plt.title("Temperature vs Time")                                 
plt.show()

plt.plot(OutsideData['Pressure'])
plt.ylabel('Pressure') 
plt.xlabel('Time')                    
plt.title("Pressure vs Time")                                 
plt.show()

plt.plot(OutsideData['Humidity'])
plt.ylabel('Humidity') 
plt.xlabel('Time')                    
plt.title("Humidity vs Time")                                 
plt.show()

meanOutTemp = np.mean(OutsideData['Temperature'])
sigmaOutTemp = np.std(OutsideData['Temperature'])
meanOutPress = np.mean(OutsideData['Pressure'])
sigmaOutPress = np.std(OutsideData['Pressure'])
meanOutHum = np.mean(OutsideData['Humidity'])
sigmaOutHum = np.std(OutsideData['Humidity'])
xOutTemp = np.linspace(meanOutTemp - 5*sigmaOutTemp,meanOutTemp + 5*sigmaOutTemp,100)
yOutTemp = norm.pdf(xOutTemp, meanOutTemp, sigmaOutTemp)
xOutPress = np.linspace(meanOutPress - 5*sigmaOutPress ,meanOutPress + 5*sigmaOutPress,100)
yOutPress = norm.pdf(xOutPress, meanOutPress, sigmaOutPress)
xOutHum = np.linspace(meanOutHum - 5*sigmaOutHum,meanOutHum + 5*sigmaOutHum,100)
yOutHum = norm.pdf(xOutHum, meanOutHum, sigmaOutHum)

plt.ion()
fig1 = plt.figure(1, figsize=(10,5))
ax1 = fig1.add_subplot()
fig1.canvas.draw()
ax1.clear()
plt.hist(OutsideData["Temperature"], density = True, bins = 20)
ax1.plot(xOutTemp, yOutTemp)
ax1.set_ylabel("Frequency")
ax1.set_xlabel("Temperature")
fig1.canvas.draw()
display.display(plt.gcf())
display.clear_output(wait=True)

plt.ion()
fig1 = plt.figure(1, figsize=(10,5))
ax1 = fig1.add_subplot()
fig1.canvas.draw()
ax1.clear()
plt.hist(OutsideData["Pressure"], density = True, bins = 15)
ax1.plot(xOutPress, yOutPress)
ax1.set_ylabel("Frequency")
ax1.set_xlabel("Pressure")
fig1.canvas.draw()
display.display(plt.gcf())
display.clear_output(wait=True)

plt.ion()
fig1 = plt.figure(1, figsize=(10,5))
ax1 = fig1.add_subplot()
fig1.canvas.draw()
ax1.clear()
plt.hist(OutsideData["Humidity"], density = True)
ax1.plot(xOutHum, yOutHum)
ax1.set_ylabel("Frequency")
ax1.set_xlabel("Humiditity")
fig1.canvas.draw()
display.display(plt.gcf())
display.clear_output(wait=True)

"""Of the 3 histograms, Pressure appears to follow a Gaussian distribution pretty closely. Temperature roughhly appears to follow it, whereas humidity is too left skewed to follow a Gausssian. """

plt.plot(InsideData['Temperature'],label = 'Inside')
plt.plot(OutsideData["Temperature"],label = 'Outside')
plt.ylabel('Temperature (Celsius)') 
plt.xlabel('Time')
plt.legend()                  
plt.title("Temperature vs Time")                                 
plt.show()

plt.plot(InsideData['Pressure'],label = 'Inside')
plt.plot(OutsideData["Pressure"],label = 'Outside')
plt.ylabel('Pressure') 
plt.xlabel('Time')    
plt.legend()                
plt.title("Pressure vs Time")                                 
plt.show()

plt.plot(InsideData['Humidity'],label = 'Inside')
plt.plot(OutsideData["Humidity"],label = 'Outside')
plt.ylabel('Humidity') 
plt.xlabel('Time')       
plt.legend()             
plt.title("Humidity vs Time")                                 
plt.show()

"""None of the measurements are equal to each other, the Inside and Outside data are always off from each other by a small amount. Of the three measurements, pressure is the only one that has the same shape for both Inside and Outside data; in both cases its a fairly straight line. For Humidity, the Inside data was relatively constant, whereas it fluctuate far more for the Outside data. The same can be said for the temperature data; it fluctuated far more for Outside data. """

print(meanInTemp,meanOutTemp)
print(sigmaInTemp,sigmaOutTemp)

print(meanInPress,meanOutPress)
print(sigmaInPress,sigmaOutPress)

print(meanInHum,meanOutHum)
print(sigmaInHum,sigmaOutHum)